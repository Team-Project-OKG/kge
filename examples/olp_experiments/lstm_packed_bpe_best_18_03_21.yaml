# Best hyperparameters for LSTM with PyTorch padding cutting and byte-pair encoding

import: [packed_lstm_lookup_embedder]

# settings for the dataset to use
dataset:
  type: olp
  name: olpbench
  byte_pair_encoding: True
  iterations_entities: 230000
  iterations_relations: 50000

# settings for ComplEx and the respective embedders
model: complex

complex:
  entity_embedder.type: packed_lstm_lookup_embedder
  relation_embedder.type: packed_lstm_lookup_embedder

packed_lstm_lookup_embedder:
  initialize: xavier_uniform_ # is Glorot initialization
  bin_within_batch: False  # if True, then bin_size is also activated
  bin_size: 50
  dim: 512
  dropout: 0.07593923183158041

# settings for the training job of each hyperparameter combination
train:
  type: negative_sampling
  max_epochs: 100
  batch_size: 4096
  subbatch_auto_tune: True
  optimizer:
    +++: +++
    default:
      type: Adagrad
      args:
        +++: +++
        lr: 0.055758330747485166
        weight_decay: 7.179384912855923e-07

# settings for negative sampling
# num_samples describes the length of individual samples, not the number of samples. e.g. num_sample: 4 -> [rand, rand, rand, rand]; num_sample:3 -> [rand, rand, rand]
negative_sampling:
  shared: True
  with_replacement: False
  implementation: batch
  samples_within_batch: True

# settings for the evaluation job
eval:
  type: olp_entity_ranking
  batch_size: 500
